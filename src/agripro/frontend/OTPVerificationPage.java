/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package agripro.frontend;

import java.awt.Color;
import static java.awt.Frame.MAXIMIZED_BOTH;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author angera
 */

public class OTPVerificationPage extends javax.swing.JFrame {
    private String email;
    /**
     * Creates new form OTPVerificationPage
     */
    public OTPVerificationPage(String email) {
        initComponents();
        this.email = email;
        setupOTPFields(); // Call the method to setup OTP fields
        this.addComponentListener(new ComponentAdapter() {
            @Override
            public void componentResized(ComponentEvent e) {
                // Check if the window is maximized
                if ((getExtendedState() & MAXIMIZED_BOTH) == MAXIMIZED_BOTH) {
                    // Set background color of JFrame when maximized
                    getContentPane().setBackground(new Color(153,153,153));
                    // Center jPanel1
                    Container.setLocation((getWidth() - Container.getWidth()) / 2, 
                                        (getHeight() - Container.getHeight()) / 2);
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Container = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        panel1 = new java.awt.Panel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        value1 = new javax.swing.JTextField();
        value2 = new javax.swing.JTextField();
        value3 = new javax.swing.JTextField();
        value4 = new javax.swing.JTextField();
        value5 = new javax.swing.JTextField();
        value6 = new javax.swing.JTextField();
        VerifyOTPbtn = new javax.swing.JButton();
        ResendOTPbtn = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Verify OTP");
        setBackground(new java.awt.Color(153, 153, 153));
        setPreferredSize(new java.awt.Dimension(600, 500));

        Container.setBackground(new java.awt.Color(153, 153, 153));
        Container.setPreferredSize(new java.awt.Dimension(600, 500));
        Container.setLayout(null);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.setPreferredSize(new java.awt.Dimension(500, 400));
        jPanel2.setLayout(new java.awt.CardLayout());

        panel1.setBackground(new java.awt.Color(255, 255, 255));
        panel1.setPreferredSize(new java.awt.Dimension(500, 400));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Cantarell", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 102));
        jLabel1.setText("ACCOUNT VERIFICATION");

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Cantarell", 0, 18)); // NOI18N
        jLabel2.setText("<html>\n<p style=\"text-align: center;\">\nEnter the verification code sent to <br> example@gmail.com\n</p>\n</html>");

        value1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        value1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        value1.setPreferredSize(new java.awt.Dimension(50, 50));

        value2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        value2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        value2.setPreferredSize(new java.awt.Dimension(50, 50));

        value3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        value3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        value3.setPreferredSize(new java.awt.Dimension(50, 50));

        value4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        value4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        value4.setPreferredSize(new java.awt.Dimension(50, 50));

        value5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        value5.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        value5.setPreferredSize(new java.awt.Dimension(50, 50));

        value6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        value6.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        value6.setPreferredSize(new java.awt.Dimension(50, 50));

        VerifyOTPbtn.setBackground(new java.awt.Color(0, 51, 51));
        VerifyOTPbtn.setFont(new java.awt.Font("Cantarell", 1, 14)); // NOI18N
        VerifyOTPbtn.setForeground(new java.awt.Color(255, 255, 255));
        VerifyOTPbtn.setText("SUBMIT");
        VerifyOTPbtn.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        VerifyOTPbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VerifyOTPbtnActionPerformed(evt);
            }
        });

        ResendOTPbtn.setFont(new java.awt.Font("Cantarell", 3, 14)); // NOI18N
        ResendOTPbtn.setForeground(new java.awt.Color(0, 0, 255));
        ResendOTPbtn.setText("Resend OTP");
        ResendOTPbtn.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        ResendOTPbtn.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                ResendOTPbtnAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel1))
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(value1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(value2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(value3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(value4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(value5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(value6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addGap(146, 146, 146)
                        .addComponent(VerifyOTPbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(26, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(105, 105, 105))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                        .addComponent(ResendOTPbtn)
                        .addGap(200, 200, 200))))
        );

        panel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {value1, value2, value3, value4, value5, value6});

        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(value3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(value2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(value1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(value4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(value5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(value6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addComponent(VerifyOTPbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(ResendOTPbtn)
                .addContainerGap())
        );

        panel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {value1, value2, value3, value4, value5, value6});

        jPanel2.add(panel1, "card2");

        Container.add(jPanel2);
        jPanel2.setBounds(50, 30, 490, 400);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Container, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 289, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Container, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 9, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void VerifyOTPbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VerifyOTPbtnActionPerformed
        // Predefined OTP for testing (in real case, retrieve this from your OTP generation logic)
        String predefinedOTP = "123456";

        // Concatenate the entered OTP from the 6 text fields
        String enteredOTP = value1.getText() + value2.getText() + value3.getText()
                + value4.getText() + value5.getText() + value6.getText();

        // Check if the entered OTP matches the predefined OTP
        if (enteredOTP.equals(predefinedOTP)) {
            // OTP is correct, proceed to the next step (open SetPassword frame)
            JOptionPane.showMessageDialog(this, "OTP Verified Successfully!");
            SetPassword PasswordFrame = new SetPassword(email);
            PasswordFrame.setVisible(true);
            PasswordFrame.pack();
            PasswordFrame.setLocationRelativeTo(null);
            this.dispose();
        } else {
            // OTP is incorrect, show an error message
            highlightInvalidFields();
            javax.swing.JOptionPane.showMessageDialog(this, "Invalid OTP. Please try again.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_VerifyOTPbtnActionPerformed

    private void ResendOTPbtnAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_ResendOTPbtnAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_ResendOTPbtnAncestorAdded

    private void setupOTPFields() {
        JTextField[] otpFields = {value1, value2, value3, value4, value5, value6};

        for (int i = 0; i < otpFields.length; i++) {
            int currentIndex = i; // for use in inner classes

            otpFields[i].addKeyListener(new KeyAdapter() {
                @Override
                public void keyPressed(KeyEvent e) {
                    // Move to the previous input if backspace is pressed
                    if (e.getKeyCode() == KeyEvent.VK_BACK_SPACE) {
                        // If the current field is empty, move focus to the previous field
                        if (otpFields[currentIndex].getText().isEmpty() && currentIndex > 0) {
                            otpFields[currentIndex - 1].requestFocus();
                        }
                    }
                }
            });

            otpFields[i].addFocusListener(new FocusAdapter() {
            @Override
            public void focusGained(FocusEvent e) {
                otpFields[currentIndex].selectAll(); // Select all text when field gains focus
            }
        });

        otpFields[i].addCaretListener(e -> {
            // Move to the next field if the current one is filled
            if (otpFields[currentIndex].getText().length() == 1) {
                if (currentIndex < otpFields.length - 1) {
                    otpFields[currentIndex + 1].requestFocus();
                }
            }
        });
    }
}
    
    private void highlightInvalidFields() {
    JTextField[] otpFields = {value1, value2, value3, value4, value5, value6};
    for (JTextField field : otpFields) {
        field.setBorder(BorderFactory.createLineBorder(Color.RED)); // Set border color to red
    }
}
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Container;
    private javax.swing.JLabel ResendOTPbtn;
    private javax.swing.JButton VerifyOTPbtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private java.awt.Panel panel1;
    private javax.swing.JTextField value1;
    private javax.swing.JTextField value2;
    private javax.swing.JTextField value3;
    private javax.swing.JTextField value4;
    private javax.swing.JTextField value5;
    private javax.swing.JTextField value6;
    // End of variables declaration//GEN-END:variables
}
